package chap22_lambda;

import java.util.Scanner;

import chap22_lambda.reference.Convertor;
import chap22_lambda.reference.MoneyConvertor;

public class _08_ReferenceMethod {
	public static void main(String[] args) {
		
		// 1. 기존에 배웠던 람다식으로 구성
		convertMoney((a,b) -> MoneyConvertor.staticConvert(a, b));
		
		// 2. 위의 내용을 메소드 참조형식으로 구성
		// 메소드를 참조해서 람다식으로 구현하려면
		// 참조하는 메소드의 형태가 함수형 인터페이스에 선언한 추상메소드의 형태와 동일해야 한다.
		// 리턴타입, 매개변수의 순서, 개수, 타입이 모두 동일해야 메소드를 참조해서 사용할 수 있다.
		convertMoney(MoneyConvertor :: staticConvert);
		
	}
	
	public static void convertMoney(Convertor convertor) {
		Scanner sc = new Scanner(System.in);
		
		System.out.println("환전할 원화를 입력하세요.");
		int money = sc.nextInt();
		sc.nextLine();
		
		System.out.println("환전할 통화의 기호를 입력하세요.($,€)");
		String str = sc.nextLine();
		
		int result = convertor.convert(money, str.charAt(0));
		
		System.out.println("환전결과: " + str.charAt(0) + result);
		
		sc.close();
		
	}
	
	public void otherConvert(int a, int b, String str) {
		System.out.println("" + a + b + str);
	}

}
