package chap23_stream;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.IntStream;
import java.util.stream.Stream;

import chap23_stream.car.HyundaiCar;

public class _03_BasicStreamEX01 {
	public static void main(String[] args) {
		
		List<HyundaiCar> hCarList = new ArrayList<>();
		
		hCarList.add(new HyundaiCar("아반떼", 3000));
		hCarList.add(new HyundaiCar("아반떼", 4500));
		hCarList.add(new HyundaiCar("아반떼", 2500));
		hCarList.add(new HyundaiCar("소나타", 4000));
		hCarList.add(new HyundaiCar("그렌저", 4500));
		hCarList.add(new HyundaiCar("제네시스", 5000));
		
		// 스트림을 이용해서 hCarList 에 있는 아반떼만 모여있는 리스트 새로 만들기
		
		Stream<HyundaiCar> hCarStream = hCarList.stream();
		
		// 1. 중간처리부
		// 스트림 메소드의 람다식의 매개변수는 컬렉션이나 배열의 요소를 하나씩 담아준다.
		// filter 의 처리부는 true , false 가 리턴되도록 논리식이나 조건식을 사용한다.
		Stream<HyundaiCar> avanteStream = hCarStream.filter(hCar -> hCar.getModel().contains("아반떼"));
		
		
		// mapToInt(): int 만 모여있는 스트림으로 변환
		IntStream priceStream = avanteStream.mapToInt(avante -> avante.getPrice());
		
		
		
		// 2. 최종처리부
//		List<HyundaiCar> avanteList = avanteStream.toList();
//		
//		System.out.println(avanteList);
		
		int priceSum = priceStream.sum();
		System.out.println("아반떼 모델의 총 가격은: " + priceSum);
		
		
		
	}

}
