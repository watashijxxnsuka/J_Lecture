package chap24_dataio.phoneinfo;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PhoneInfo {
	
	// 이름이 키, 전화번호가 벨류
	// 한서준, 010-1111-1111
	List<Map<String, String>> phoneInfoList = new ArrayList<>();
	
	public PhoneInfo() {
		// 생성자에서 저장된 파일을 입력받아 저장된 내용을 phoneInfoList 에 저장
		try {
		// 1. FileReader 객체 생성
//		Reader reader = new FileReader(
//				"C:/lecture/Java/JavaProgramming/src/chap24_dataio/PhoneInfo.txt"
//				);
//		
		// 2. 성능이 향상된 BufferedReader 객체 생성
		// 이미 생성된 문자 입력 스트림에 붙여서 사용한다.
		// 생성자에 미리 생성된 문자 입력 스트림을 전달하여 문자 입력 스트림에 붙인다.
		BufferedReader bufferedReader = new BufferedReader(
				new FileReader(
						"C:/lecture/Java/JavaProgramming/src/chap24_dataio/PhoneInfo.txt"
						)
					);
		
		while(true) {
			// 3. readLine(): 파일의 한 줄을 문자열로 읽어오는 메소드
			// BufferedReader 에서만 사용 가능한 메소드
			String line = bufferedReader.readLine();
			
			// 4. readLine() 메소드는 더 이상 읽을 데이터가 없을 때 null 을 리턴한다
			if(line == null) {
				break;
			}
			
			Map<String, String> phoneInfoMap = new HashMap<>();
			phoneInfoMap.put(line.split(", ")[0], line.split(", ")[1]);
			
			phoneInfoList.add(phoneInfoMap);
			
		}
		
		} catch(IOException ie) {
			System.out.println(ie.getMessage());
		}
		
	}
	
	public void insertPhoneInfo(String name, String number) {
		//매개변수로 전달된 이름과 번호를 각각의 배열에 저장하는 기능 구현
		this.names[index] = name;
		this.phoneNums[index] = number;
		index++;
	}

	public void printAllPhoneInfo() {
		 //배열에 저장된 모든 이름과 번호를 순서대로 출력하는 기능 구현
		for(int i = 0; i < names.length; i++) {
			if(names[i] != null) {
				System.out.print("이름 : " + names[i] + ", 번호 : " + phoneNums[i] + "\n");
			}
		}
	}
	
	public void printPhoneInfo(int index) {
		//매개변수로 전달된 인덱스에 해당하는 이름과 번호 출력하는 기능 구현
		if(names[index - 1] != null) {
			System.out.print("이름 : " + names[index - 1] + ", 번호 : " + phoneNums[index - 1] + "\n");
		} else {
			System.out.println("해당 번호로 저장된 정보가 없습니다.");
		}
	}
}
